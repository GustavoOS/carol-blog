---
import type { CollectionEntry } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import FormattedDate from '../components/FormattedDate.astro';
import { SidebarLayout } from './sidebar';

type Props = CollectionEntry<'blog'>['data'] & {category?: string, subTitle?: string};

const { title, description, pubDate, updatedDate, heroImage, category, subTitle } = Astro.props;
---

<html lang="pt-br">
	<head>
		<BaseHead title={title} description={description} image={heroImage}/>
		<style>
			.hero-image {
				width: 100%;
			}
			.hero-image img {
				display: block;
				margin: 0 auto;
				border-radius: 12px;
				box-shadow: var(--box-shadow);
			}
			.prose {
				margin: auto;
				padding: 1em;
				color: rgb(var(--gray-dark));
			}
			.title {
				margin-bottom: 1em;
				padding: 1em 0;
				text-align: center;
				line-height: 1;
			}
			.title h1 {
				margin: 0 0 0.5em 0;
			}
			.date {
				margin-bottom: 0.5em;
				color: rgb(var(--gray));
			}
			.last-updated-on {
				font-style: italic;
			}
		</style>
	</head>

	<body>
		<SidebarLayout client:load currentPath={Astro.url.pathname} title={{title, titleWithUrl: category ?? "Blog", url: "/blog"}}>
			<article>
				<div class="prose">
					<div class="title">
						<h1>{title}</h1>
						{subTitle && <h2 style={{color: "#71717a",
							fontSize: "1.5rem"
						}}>{subTitle}</h2>}
						<div class="date">
							<FormattedDate date={pubDate} />
							{
								updatedDate && (
									<div class="last-updated-on">
										Last updated on <FormattedDate date={updatedDate} />
									</div>
								)
							}
						</div>						
						<hr />
					</div>

					<div class="hero-image mb-12">
						{heroImage && <img width={1020} height={510} src={heroImage} alt="" />}
					</div>
					<slot class="slot"/>
				</div>
			</article>
		</SidebarLayout>
	</body>
</html>
